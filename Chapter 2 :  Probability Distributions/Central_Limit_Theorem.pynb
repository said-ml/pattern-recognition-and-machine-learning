{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fb0c62f9-bb17-4fab-89c7-047dc6e74a5a",
   "metadata": {},
   "source": [
    "## Central limit theorem:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "753cd0cb-a141-432b-8f61-a8ab7395236c",
   "metadata": {},
   "source": [
    "let $X_{1}, ..., X_{N}$ a set of $uniform$ variables , for large number $N$, the distribution of means $\\dfrac{X_{1}+...+ X_{N}}{N}$ tend towards a $gaussian$.\n",
    "we can model this by a $central$$~$$limit$ class."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "af1609d8-8f2e-4686-839e-a1f5cc599fc3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from numpy.random import binomial, uniform\n",
    "np.random.seed(0)\n",
    "\n",
    "\n",
    "class CentralLimit:\n",
    "\n",
    "    def __init__(self, N_size:int=10, n_samples=10000):\n",
    "        \n",
    "        self.N=N_size\n",
    "        self.n_samples=n_samples\n",
    "\n",
    "    def fit(self, dist:callable):\n",
    "         means=[]\n",
    "         for _ in range(self.n_samples):\n",
    "             sample=dist(0, 1, self.N)\n",
    "             sample=np.array(sample)\n",
    "             mean=sample.sum()/len(sample)\n",
    "             means.append(mean)\n",
    "         return means\n",
    "\n",
    "    def visualize(self, dist):\n",
    "          plt.hist(self.fit(dist), density=1, label='N='+str(self.N))\n",
    "          plt.legend()\n",
    "          plt.show()\n",
    "\n",
    "for N in [1, 2, 10]:\n",
    "    TCL=CentralLimit( N_size=N)\n",
    "    TCL.fit(uniform)\n",
    "    TCL.visualize(uniform)            \n",
    "             \n",
    "# you can try with  binomial distribution         \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc936262-cd12-4733-ab0b-c2ca28ef42b6",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cba07016-9262-41a0-b1b4-004a5eb62029",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
